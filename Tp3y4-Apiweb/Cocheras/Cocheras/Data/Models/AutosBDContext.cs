// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Data.Models;

public partial class AutosBDContext : DbContext
{
    public AutosBDContext(DbContextOptions<AutosBDContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Autos> Autos { get; set; }

    public virtual DbSet<Cocheras> Cocheras { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Autos>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("autos_pkey");

            entity.ToTable("autos");

            entity.Property(e => e.Id)
                .UseIdentityAlwaysColumn()
                .HasIdentityOptions(null, null, null, 99999L, null, null)
                .HasColumnName("id");
            entity.Property(e => e.Color)
                .IsRequired()
                .HasColumnName("color");
            entity.Property(e => e.IdCochera).HasColumnName("idCochera");
            entity.Property(e => e.Marca)
                .IsRequired()
                .HasColumnName("marca");
            entity.Property(e => e.Modelo)
                .IsRequired()
                .HasColumnName("modelo");
            entity.Property(e => e.Puerta).HasColumnName("puerta");

            entity.HasOne(d => d.IdCocheraNavigation).WithMany(p => p.Autos)
                .HasForeignKey(d => d.IdCochera)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("idCochera");
        });

        modelBuilder.Entity<Cocheras>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("cochera_pkey");

            entity.ToTable("cocheras");

            entity.Property(e => e.Id)
                .UseIdentityAlwaysColumn()
                .HasIdentityOptions(null, null, null, 9999L, null, null)
                .HasColumnName("id");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasColumnName("nombre");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}